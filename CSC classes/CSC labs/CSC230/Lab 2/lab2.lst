
AVRASM ver. 2.1.42  H:\CSC230\Lab 2\lab2.asm Wed Jan 17 13:45:06 2018

                 
                 
                 .org 0  ;start at address 0 
                 
                 .def number1 = r16   ;register 16 holds a number
                 	
000000 e00a      	ldi number1, 0x0A   ;load hex number 0x0A to register
000001 7001      	andi number1, 0b00000001   ;perform and op to clear all bit except LSB
                 
                 .def number2 = r17    	
000002 e018      	ldi number2, 0x08   ;load number
000003 9516      	lsr number2    ;logical shift right
                 	
                 
                 .def number3 = r18
000004 e124      	ldi number3, 0x14      ;load number
000005 0f21      	add number3, number2   ;note: add operation works like number3 = number2 + number3
                 
                 .def number4 = r19
000006 e133      	ldi number4, 0b00010011  ;load binary number (note: in 2s complement)
000007 9537      	ror number4              ;Rotate right
000008 940c 0008 	done: jmp done


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

Register use summary:
r0 :   0 r1 :   0 r2 :   0 r3 :   0 r4 :   0 r5 :   0 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   0 
r16:   2 r17:   3 r18:   2 r19:   2 r20:   0 r21:   0 r22:   0 r23:   0 
r24:   0 r25:   0 r26:   0 r27:   0 r28:   0 r29:   0 r30:   0 r31:   0 
x  :   0 y  :   0 z  :   0 
Registers used: 4 out of 35 (11.4%)

Instruction use summary:
.lds  :   0 .sts  :   0 adc   :   0 add   :   1 adiw  :   0 and   :   0 
andi  :   1 asr   :   0 bclr  :   0 bld   :   0 brbc  :   0 brbs  :   0 
brcc  :   0 brcs  :   0 break :   0 breq  :   0 brge  :   0 brhc  :   0 
brhs  :   0 brid  :   0 brie  :   0 brlo  :   0 brlt  :   0 brmi  :   0 
brne  :   0 brpl  :   0 brsh  :   0 brtc  :   0 brts  :   0 brvc  :   0 
brvs  :   0 bset  :   0 bst   :   0 call  :   0 cbi   :   0 cbr   :   0 
clc   :   0 clh   :   0 cli   :   0 cln   :   0 clr   :   0 cls   :   0 
clt   :   0 clv   :   0 clz   :   0 com   :   0 cp    :   0 cpc   :   0 
cpi   :   0 cpse  :   0 dec   :   0 eicall:   0 eijmp :   0 elpm  :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 
in    :   0 inc   :   0 jmp   :   1 ld    :   0 ldd   :   0 ldi   :   4 
lds   :   0 lpm   :   0 lsl   :   0 lsr   :   1 mov   :   0 movw  :   0 
mul   :   0 muls  :   0 mulsu :   0 neg   :   0 nop   :   0 or    :   0 
ori   :   0 out   :   0 pop   :   0 push  :   0 rcall :   0 ret   :   0 
reti  :   0 rjmp  :   0 rol   :   0 ror   :   1 sbc   :   0 sbci  :   0 
sbi   :   0 sbic  :   0 sbis  :   0 sbiw  :   0 sbr   :   0 sbrc  :   0 
sbrs  :   0 sec   :   0 seh   :   0 sei   :   0 sen   :   0 ser   :   0 
ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :   0 std   :   0 sts   :   0 sub   :   0 subi  :   0 swap  :   0 
tst   :   0 wdr   :   0 
Instructions used: 6 out of 116 (5.2%)

Memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000014     20      0     20 unknown      -
[.dseg] 0x000060 0x000060      0      0      0 unknown      -
[.eseg] 0x000000 0x000000      0      0      0 unknown      -

Assembly complete, 0 errors, 0 warnings
